import java.util.Stack;

public class Main {


    public static void compute_span( int price[], int out[]){

        out[0] = 1;

        Stack<Integer> s= new Stack<Integer>();
        //Stack stores the last largest element's index found
        s.push(0);
        for ( int i = 1 ; i < price.length; i++){


            while( !s.empty() && price[s.peek()] <= price[i]){
                //pop until the stack is empty or we get larger element
                s.pop();
            }
            if( s.empty()){
                out[i] = i + 1;
            }
            else{
                out[i] = i - s.peek();
            }

            s.push(i); //we push it as it can be minimum nearest possible for next one
        }
    }
    public static void main(String[] args) {
        System.out.println("Hello World!");

        int price[] = {100, 20, 80, 60, 200, 300, 400, 20};
        int n = price.length;
        int[] output = new int[n];

        compute_span(price, output);
        for (int i = 0; i < output.length; i++) {
            System.out.print(output[i] + " ");
        }
        System.out.println();
    }
}
